{"version":3,"sources":["App.js","components/Break.js","components/Session.js","components/Timer.js","index.js"],"names":["controlStopwatch","Break","className","id","onClick","this","props","handleChange","break","Component","Session","session","Timer","label","formatTimer","startStop","resetTimer","preload","src","App","e","clickedElement","target","parentElement","breakValue","state","sessionValue","timerActive","setState","timer","minutes","Math","floor","seconds","sessionCountdown","pauseSound","undefined","pauseCountdown","fn","time","cancel","nextAt","timeout","wrapper","Date","getTime","setTimeout","clearTimeout","accurateInterval","beginCountdown","checkTime","playSound","beep","document","getElementById","pause","currentTime","play","ReactDOM","render","StrictMode"],"mappings":"2IAOIA,E,4DCUWC,E,uKAbP,OACM,yBAAKC,UAAU,UACb,yBAAKC,GAAG,eAAR,gBACA,yBAAKD,UAAU,qBACX,yBAAKA,UAAU,MAAMC,GAAG,kBAAkBC,QAASC,KAAKC,MAAMC,cAAc,uBAAGL,UAAU,uBACrF,yBAAKC,GAAG,gBAAgBE,KAAKC,MAAME,OACvC,yBAAKN,UAAU,MAAMC,GAAG,kBAAkBC,QAASC,KAAKC,MAAMC,cAAc,uBAAGL,UAAU,2B,GARzFO,aCeLC,E,uKAbP,OACI,yBAAKR,UAAU,UACX,yBAAKC,GAAG,iBAAR,kBACA,yBAAKD,UAAU,qBACX,yBAAKA,UAAU,MAAMC,GAAG,oBAAoBC,QAASC,KAAKC,MAAMC,cAAc,uBAAGL,UAAU,uBAC3F,yBAAKC,GAAG,kBAAkBE,KAAKC,MAAMK,SACrC,yBAAKT,UAAU,MAAMC,GAAG,oBAAoBC,QAASC,KAAKC,MAAMC,cAAc,uBAAGL,UAAU,2B,GARzFO,aCmBPG,E,uKAhBP,OACA,yBAAKV,UAAU,mBACX,yBAAKA,UAAU,SACX,uBAAGC,GAAG,eAAeE,KAAKC,MAAMO,OAChC,yBAAKV,GAAG,aAAaE,KAAKC,MAAMQ,cAEpC,yBAAKZ,UAAU,YACX,yBAAKA,UAAU,MAAMC,GAAG,aAAaC,QAASC,KAAKC,MAAMS,WAAW,uBAAGb,UAAU,gBAAkB,uBAAGA,UAAU,kBAChH,yBAAKA,UAAU,MAAMC,GAAG,QAAQC,QAASC,KAAKC,MAAMU,YAAY,uBAAGd,UAAU,sBAEjF,2BAAOC,GAAG,OAAOc,QAAQ,OAAOC,IAAI,mH,GAb5BT,aHkKLU,G,wDAtIb,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,aAAe,SAACa,GACd,IAAMC,EAAiBD,EAAEE,OAAOC,cAAcpB,GAC1CqB,EAAa,EAAKC,MAAMjB,MACxBkB,EAAe,EAAKD,MAAMd,QAE1Ba,GAAa,GAAwB,oBAAnBH,GAClBG,GAAY,IAAyB,oBAAnBH,GAClBK,GAAe,GAAwB,sBAAnBL,GACpBK,GAAc,IAAyB,sBAAnBL,IAED,oBAAnBA,GAAyC,EAAKI,MAAME,aACtD,EAAKC,SAAS,CAACpB,MAAOgB,EAAa,IAEd,oBAAnBH,GAAyC,EAAKI,MAAME,aACtD,EAAKC,SAAS,CAACpB,MAAOgB,EAAY,IAEb,sBAAnBH,GAA2C,EAAKI,MAAME,cACxDD,GAA8B,EAC9B,EAAKE,SAAS,CAACjB,QAASe,EACxBG,MAAsB,GAAfH,KAOc,sBAAnBL,GAA2C,EAAKI,MAAME,cACxDD,GAA8B,EAC9B,EAAKE,SAAS,CAACjB,QAASe,EACxBG,MAAsB,GAAfH,OAzCQ,EAkDnBZ,YAAc,WACZ,IAAIgB,EAAUC,KAAKC,MAAM,EAAKP,MAAMI,MAAQ,IACxCI,EAAU,EAAKR,MAAMI,MAAkB,GAAVC,EAGjC,OADAA,EAAUA,EAAU,GAAK,IAAMA,EAAUA,GACxB,KAFjBG,EAAUA,EAAU,GAAK,IAAMA,EAAUA,IArDxB,EA0DnBjB,WAAa,WACX,EAAKY,SAAS,CACZpB,MAAO,EACPG,QAAS,GACTkB,MAAO,KACPF,aAAa,EACbO,kBAAkB,EAClBrB,MAAO,YAET,EAAKsB,kBACmBC,IAArBpC,GAA+C,EAAKqC,kBApEtC,EAuEnBtB,UAAY,WACV,EAAKU,MAAME,YAAc,EAAKU,iBAAmBrC,EA5F5B,SAASsC,EAAIC,GAClC,IAAIC,EAAQC,EAAQC,EAASC,EAY7B,OAXAF,GAAS,IAAIG,MAAOC,UAAYN,EAChCG,EAAU,KACVC,EAAU,WAGR,OAFAF,GAAUF,EACVG,EAAUI,WAAWH,EAASF,GAAS,IAAIG,MAAOC,WAC3CP,KAETE,EAAS,WACP,OAAOO,aAAaL,IAEtBA,EAAUI,WAAWH,EAASF,GAAS,IAAIG,MAAOC,WAC3C,CACLL,OAAQA,GA8E0DQ,CAAiB,EAAKC,eAAgB,MAxEzF,EA2EnBA,eAAiB,WACf,EAAKrB,SAAS,CACZC,MAAO,EAAKJ,MAAMI,MAAQ,EAC1BF,aAAa,IAEf,EAAKuB,aAhFY,EAmFnBb,eAAiB,WACfrC,EAAiBwC,SAClB,EAAKZ,SAAS,CACbD,aAAa,KAtFI,EA0FnBuB,UAAY,WACV,IAA0B,IAAtB,EAAKzB,MAAMI,QAAgD,IAAhC,EAAKJ,MAAMS,iBACxC,EAAKN,SAAS,CACZC,MAA0B,GAAnB,EAAKJ,MAAMjB,MAClB0B,kBAAkB,EAClBrB,MAAO,UAET,EAAKsC,gBACA,KAA0B,IAAtB,EAAK1B,MAAMI,QAAgD,IAAhC,EAAKJ,MAAMS,iBAOxC,OANL,EAAKN,SAAS,CACZC,MAA4B,GAArB,EAAKJ,MAAMd,QAClBuB,kBAAkB,EAClBrB,MAAO,YAET,EAAKsC,cAxGQ,EA4GjBA,UAAY,WACV,IAAMC,EAAOC,SAASC,eAAe,QACrCF,EAAKG,QACLH,EAAKI,YAAc,EACnBJ,EAAKK,QAhHU,EAmHjBtB,WAAa,WACX,IAAMiB,EAAOC,SAASC,eAAe,QACrCF,EAAKG,QACLH,EAAKI,YAAc,GApHrB,EAAK/B,MAAQ,CACXjB,MAAO,EACPG,QAAS,GACTkB,MAAO,KACPF,aAAa,EACbO,kBAAkB,EAClBrB,MAAO,WARQ,E,qDA0HjB,OACE,yBAAKV,GAAG,OACN,yBAAKD,UAAU,iBACb,kBAAC,EAAD,CAAOM,MAAOH,KAAKoB,MAAMjB,MAAOD,aAAcF,KAAKE,eACnD,kBAAC,EAAD,CAASI,QAASN,KAAKoB,MAAMd,QAASJ,aAAcF,KAAKE,gBAE3D,kBAAC,EAAD,CAAOO,YAAaT,KAAKS,cAAeE,WAAYX,KAAKW,WAAYD,UAAWV,KAAKU,UAAWF,MAAOR,KAAKoB,MAAMZ,a,GAjIxGJ,cIxBlBiD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFP,SAASC,eAAe,U","file":"static/js/main.09ff71d8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Break from './components/Break';\nimport Session from './components/Session';\nimport Timer from './components/Timer';\nimport './App.css';\n\n\nlet controlStopwatch;\n\n//script to make sure that interval stays synced from https://gist.github.com/AlexJWayne/1431195\nconst accurateInterval = function(fn, time) {\n    var cancel, nextAt, timeout, wrapper;\n    nextAt = new Date().getTime() + time;\n    timeout = null;\n    wrapper = function() {\n      nextAt += time;\n      timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n      return fn();\n    };\n    cancel = function() {\n      return clearTimeout(timeout);\n    };\n    timeout = setTimeout(wrapper, nextAt - new Date().getTime());\n    return {\n      cancel: cancel\n    };\n  };\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      break: 5,\n      session: 25,\n      timer: 1500,\n      timerActive: false,\n      sessionCountdown: true,\n      label: 'Session'\n    }\n  }\n\n  handleChange = (e) => {\n    const clickedElement = e.target.parentElement.id;\n    let breakValue = this.state.break;\n    let sessionValue = this.state.session;\n    \n    if (breakValue <=1 && clickedElement === 'break-decrement') return;\n    if (breakValue>=60 && clickedElement === 'break-increment') return;\n    if (sessionValue <=1 && clickedElement === 'session-decrement') return;\n    if (sessionValue>=60 && clickedElement === 'session-increment') return;\n\n    if (clickedElement === 'break-decrement' && !this.state.timerActive) {\n      this.setState({break: breakValue - 1});\n    };\n    if (clickedElement === 'break-increment' && !this.state.timerActive) {\n      this.setState({break: breakValue +1});\n    };\n    if (clickedElement === 'session-decrement' && !this.state.timerActive) {\n      sessionValue = sessionValue - 1;\n      this.setState({session: sessionValue,\n      timer: sessionValue * 60\n    })\n// //FIGURE OUT HOW TO UPDATE THIS SHIT\n//         this.setState(oldState => ({session: oldState.session - 1,\n//                                     timer: (oldState.session - 1) * 60     \n//     }));\n  }\n    if (clickedElement === 'session-increment' && !this.state.timerActive) {\n      sessionValue = sessionValue + 1;\n      this.setState({session: sessionValue,\n      timer: sessionValue * 60\n    })\n    // this.setState(oldState => ({session: oldState.session + 1,\n    //                             timer: (oldState.session + 1) * 60        \n    // }));\n\n    }; \n  }\n\n  formatTimer = () =>{\n    let minutes = Math.floor(this.state.timer / 60);\n    let seconds = this.state.timer - minutes * 60;\n    seconds = seconds < 10 ? '0' + seconds : seconds;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    return minutes + ':' + seconds;\n  }\n\n  resetTimer = () => {\n    this.setState({\n      break: 5,\n      session: 25,\n      timer: 1500,\n      timerActive: false,\n      sessionCountdown: true,\n      label: 'Session'\n    });\n    this.pauseSound();\n   if (controlStopwatch === undefined) {return} else {this.pauseCountdown()};\n  }\n\n  startStop = () => {\n    this.state.timerActive ? this.pauseCountdown() : controlStopwatch = accurateInterval(this.beginCountdown, 1000)    \n  }\n\n  beginCountdown = () => {\n    this.setState({\n      timer: this.state.timer - 1,\n      timerActive: true\n    });\n    this.checkTime();\n  }\n\n  pauseCountdown = () => {\n    controlStopwatch.cancel();\n   this.setState({\n    timerActive: false\n  })\n  }\n\n  checkTime = () => {\n    if (this.state.timer === -1 && this.state.sessionCountdown === true) {\n      this.setState({\n        timer: this.state.break * 60,\n        sessionCountdown: false,\n        label: 'Break'\n      });\n      this.playSound();\n    } else if (this.state.timer === -1 && this.state.sessionCountdown === false) {\n        this.setState({\n          timer: this.state.session * 60,\n          sessionCountdown: true,\n          label: 'Session'\n        });\n        this.playSound();\n      } else return;\n    }\n\n    playSound = () => {\n      const beep = document.getElementById('beep');\n      beep.pause();\n      beep.currentTime = 0;\n      beep.play();\n    }\n\n    pauseSound = () => {\n      const beep = document.getElementById('beep');\n      beep.pause();\n      beep.currentTime = 0;\n    }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <div className=\"nav-container\">\n          <Break break={this.state.break} handleChange={this.handleChange}/>\n          <Session session={this.state.session} handleChange={this.handleChange}/>        \n        </div>\n        <Timer formatTimer={this.formatTimer()} resetTimer={this.resetTimer} startStop={this.startStop} label={this.state.label}/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from 'react';\n\nclass Break extends Component {\n    render() {\n        return (\n              <div className=\"module\">\n                <div id=\"break-label\">Break Length</div>\n                <div className=\"buttons-container\">\n                    <div className=\"btn\" id=\"break-decrement\" onClick={this.props.handleChange}><i className=\"fas fa-caret-down\"></i></div>\n                        <div id=\"break-length\">{this.props.break}</div>\n                    <div className=\"btn\" id=\"break-increment\" onClick={this.props.handleChange}><i className=\"fas fa-caret-up\"></i></div>\n                </div>\n              </div>\n        )\n    }\n}\n\nexport default Break\n","import React, { Component } from 'react';\n\nclass Session extends Component {\n    render() {\n        return (\n            <div className=\"module\">\n                <div id=\"session-label\">Session Length</div>\n                <div className=\"buttons-container\">\n                    <div className=\"btn\" id=\"session-decrement\" onClick={this.props.handleChange}><i className=\"fas fa-caret-down\"></i></div>\n                    <div id=\"session-length\">{this.props.session}</div>\n                    <div className=\"btn\" id=\"session-increment\" onClick={this.props.handleChange}><i className=\"fas fa-caret-up\"></i></div>\n                </div>\n          </div>\n        )\n    }\n}\n\nexport default Session\n","import React, { Component } from 'react'\n\nclass Timer extends Component {\n\n    render() {\n        return (\n        <div className=\"timer-container\">\n            <div className=\"timer\">\n                <p id=\"timer-label\">{this.props.label}</p>\n                <div id=\"time-left\">{this.props.formatTimer}</div>\n            </div>\n            <div className=\"controls\">\n                <div className=\"btn\" id=\"start_stop\" onClick={this.props.startStop}><i className=\"fas fa-play\"></i><i className=\"fas fa-pause\"></i></div>\n                <div className=\"btn\" id=\"reset\" onClick={this.props.resetTimer}><i className=\"fas fa-sync-alt\"></i></div>\n            </div>\n            <audio id=\"beep\" preload=\"auto\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"></audio>\n        </div>\n        )\n    }\n}\n\nexport default Timer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}